name: Build and Deploy

on:
  push:
    branches:
      - feature/pipeline-ci-cd

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      #
      - name: Install dependencies Vue JS
        run: cd client && npm i

      - name: Build Vue.js application
        run: cd client && npm run build

  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Pull images
        run: docker compose pull --ignore-pull-failures || true
      - name: Start services
        run: docker compose up --build -d
      - name: Wait for services
        run: |
          while status="$(docker inspect --format="{{if .Config.Healthcheck}}{{print .State.Health.Status}}{{end}}" "$(docker compose ps -q php)")"; do
            case $status in
              starting) sleep 1;;
              healthy) exit 0;;
              unhealthy)
                docker compose ps
                docker compose logs
                exit 1
              ;;
            esac
          done
          exit 1
      - name: Check HTTP reachability
        run: curl -v -o /dev/null http://localhost
      - name: Check API reachability
        run: curl -vk -o /dev/null http://localhost
      - name: Check PWA reachability
        run: "curl -vk -o /dev/null -H 'Accept: text/html' http://localhost"
      - name: Create test database
        run: |
          docker compose exec -T php bin/console -e test doctrine:database:create
          docker compose exec -T php bin/console -e test doctrine:migrations:migrate --no-interaction
      - name: PHPUnit
        run: docker compose exec -T php bin/phpunit
      - name: Doctrine Schema Validator
        run: docker compose exec -T php bin/console doctrine:schema:validate --skip-sync

#    deploy:
#      runs-on: ubuntu-latest
#
#      needs: build-test
#
#      steps:
#        - uses: actions/checkout@v3
#        - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
#          with:
#            heroku_api_key: ${{secrets.HEROKU_API_KEY}}
#            heroku_app_name: "esgi-sdc" #Must be unique in Heroku
#            heroku_email: "m.kajeiou123@gmail.com"