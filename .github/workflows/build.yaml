name: Build and Deploy

on:
  push:
    branches:
      - feature/pipeline-ci-cd

jobs:
  vue-build:
    name: test-vue-js
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      #
      - name: Install dependencies Vue JS
        run: cd client && npm i

      - name: Build Vue.js application
        run: cd client && npm run build

  test-api:
    name: test-api-platform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Pull images
        run: docker compose pull --ignore-pull-failures || true
      - name: Start services
        run: docker compose up --build -d
      - name: Wait for services
        run: |
          while status="$(docker inspect --format="{{if .Config.Healthcheck}}{{print .State.Health.Status}}{{end}}" "$(docker compose ps -q php)")"; do
            case $status in
              starting) sleep 1;;
              healthy) exit 0;;
              unhealthy)
                docker compose ps
                docker compose logs
                exit 1
              ;;
            esac
          done
          exit 1

      - name: Create test database
        run: |
          docker compose exec -T php bin/console -e test doctrine:database:create --if-not-exists
          docker compose exec -T php bin/console -e test doctrine:migrations:migrate --no-interaction

  deploy:
    runs-on: ubuntu-latest

    needs:
      - vue-build
      - test-api

    steps:
      - name: Install Heroku Cli
        run: curl https://cli-assets.heroku.com/install-ubuntu.sh | sh
      - uses: actions/checkout@v3
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU}}
          heroku_app_name: "challenge-esgi" #Must be unique in Heroku
          heroku_email: "theodoresigaud@gmail.com"
